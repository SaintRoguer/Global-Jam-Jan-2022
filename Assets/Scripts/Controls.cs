//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.2.0
//     from Assets/Scripts/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""game"",
            ""id"": ""2936fb48-c627-4138-8581-2831d54329a2"",
            ""actions"": [
                {
                    ""name"": ""move"",
                    ""type"": ""Value"",
                    ""id"": ""5a742966-5519-42f1-8e98-587152e9ee43"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""jump"",
                    ""type"": ""Button"",
                    ""id"": ""e466db54-1f8b-4838-ab04-848dec5bfff0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""shoot"",
                    ""type"": ""Button"",
                    ""id"": ""9b15b101-481b-4e45-8611-ba575f87ed08"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""switchGunColor"",
                    ""type"": ""Button"",
                    ""id"": ""3dee4d02-6229-465f-940d-42991e3bd220"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""switchPlayerColor"",
                    ""type"": ""Button"",
                    ""id"": ""29539c89-33a1-4181-8d56-309a5fe5f113"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""interact"",
                    ""type"": ""Button"",
                    ""id"": ""c3460482-422f-4120-8a89-f2d4fb409d11"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""dash"",
                    ""type"": ""Button"",
                    ""id"": ""5ae46850-c502-4489-b167-10990ae90f28"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""55ba87ed-9296-4377-b517-38326f6cbc55"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d4f8a88f-1192-4a28-a8ae-837fd67ffdd7"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f09a6b49-7899-4fc9-bfa5-bcb3f5c557d3"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""13ad7fe4-1e43-4d4e-b13e-8dcbada23a7a"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a3d3b075-1a2d-4e1b-8d28-fabcb9fd5a81"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""76d112f3-c579-4f55-8c3b-3e7606c0fb20"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""switchGunColor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""025e4691-c163-4a85-84cf-33b97f28016b"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""switchPlayerColor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a0c9a6dc-8bb2-48dd-99b3-61a23cdec732"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""544b8e2e-9085-4c9f-9977-00d3a6dbf5f9"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""28b4e959-ab9c-4185-8317-b2df55fbd377"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Negative"",
                    ""id"": ""6d27d8bd-87e7-4ef6-8ff7-053d93d07636"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Positive"",
                    ""id"": ""30998906-5963-46c4-8a29-4aa6c8a1b553"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""arrows"",
                    ""id"": ""60042f97-d55f-4822-b10a-84a87eb671ee"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Negative"",
                    ""id"": ""7d2565f5-5f72-419a-a296-e332fb882792"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Positive"",
                    ""id"": ""12283955-05bb-49c1-8d4a-3f4b57510e69"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // game
        m_game = asset.FindActionMap("game", throwIfNotFound: true);
        m_game_move = m_game.FindAction("move", throwIfNotFound: true);
        m_game_jump = m_game.FindAction("jump", throwIfNotFound: true);
        m_game_shoot = m_game.FindAction("shoot", throwIfNotFound: true);
        m_game_switchGunColor = m_game.FindAction("switchGunColor", throwIfNotFound: true);
        m_game_switchPlayerColor = m_game.FindAction("switchPlayerColor", throwIfNotFound: true);
        m_game_interact = m_game.FindAction("interact", throwIfNotFound: true);
        m_game_dash = m_game.FindAction("dash", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // game
    private readonly InputActionMap m_game;
    private IGameActions m_GameActionsCallbackInterface;
    private readonly InputAction m_game_move;
    private readonly InputAction m_game_jump;
    private readonly InputAction m_game_shoot;
    private readonly InputAction m_game_switchGunColor;
    private readonly InputAction m_game_switchPlayerColor;
    private readonly InputAction m_game_interact;
    private readonly InputAction m_game_dash;
    public struct GameActions
    {
        private @Controls m_Wrapper;
        public GameActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @move => m_Wrapper.m_game_move;
        public InputAction @jump => m_Wrapper.m_game_jump;
        public InputAction @shoot => m_Wrapper.m_game_shoot;
        public InputAction @switchGunColor => m_Wrapper.m_game_switchGunColor;
        public InputAction @switchPlayerColor => m_Wrapper.m_game_switchPlayerColor;
        public InputAction @interact => m_Wrapper.m_game_interact;
        public InputAction @dash => m_Wrapper.m_game_dash;
        public InputActionMap Get() { return m_Wrapper.m_game; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameActions set) { return set.Get(); }
        public void SetCallbacks(IGameActions instance)
        {
            if (m_Wrapper.m_GameActionsCallbackInterface != null)
            {
                @move.started -= m_Wrapper.m_GameActionsCallbackInterface.OnMove;
                @move.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnMove;
                @move.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnMove;
                @jump.started -= m_Wrapper.m_GameActionsCallbackInterface.OnJump;
                @jump.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnJump;
                @jump.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnJump;
                @shoot.started -= m_Wrapper.m_GameActionsCallbackInterface.OnShoot;
                @shoot.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnShoot;
                @shoot.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnShoot;
                @switchGunColor.started -= m_Wrapper.m_GameActionsCallbackInterface.OnSwitchGunColor;
                @switchGunColor.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnSwitchGunColor;
                @switchGunColor.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnSwitchGunColor;
                @switchPlayerColor.started -= m_Wrapper.m_GameActionsCallbackInterface.OnSwitchPlayerColor;
                @switchPlayerColor.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnSwitchPlayerColor;
                @switchPlayerColor.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnSwitchPlayerColor;
                @interact.started -= m_Wrapper.m_GameActionsCallbackInterface.OnInteract;
                @interact.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnInteract;
                @interact.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnInteract;
                @dash.started -= m_Wrapper.m_GameActionsCallbackInterface.OnDash;
                @dash.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnDash;
                @dash.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnDash;
            }
            m_Wrapper.m_GameActionsCallbackInterface = instance;
            if (instance != null)
            {
                @move.started += instance.OnMove;
                @move.performed += instance.OnMove;
                @move.canceled += instance.OnMove;
                @jump.started += instance.OnJump;
                @jump.performed += instance.OnJump;
                @jump.canceled += instance.OnJump;
                @shoot.started += instance.OnShoot;
                @shoot.performed += instance.OnShoot;
                @shoot.canceled += instance.OnShoot;
                @switchGunColor.started += instance.OnSwitchGunColor;
                @switchGunColor.performed += instance.OnSwitchGunColor;
                @switchGunColor.canceled += instance.OnSwitchGunColor;
                @switchPlayerColor.started += instance.OnSwitchPlayerColor;
                @switchPlayerColor.performed += instance.OnSwitchPlayerColor;
                @switchPlayerColor.canceled += instance.OnSwitchPlayerColor;
                @interact.started += instance.OnInteract;
                @interact.performed += instance.OnInteract;
                @interact.canceled += instance.OnInteract;
                @dash.started += instance.OnDash;
                @dash.performed += instance.OnDash;
                @dash.canceled += instance.OnDash;
            }
        }
    }
    public GameActions @game => new GameActions(this);
    public interface IGameActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
        void OnSwitchGunColor(InputAction.CallbackContext context);
        void OnSwitchPlayerColor(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
    }
}
